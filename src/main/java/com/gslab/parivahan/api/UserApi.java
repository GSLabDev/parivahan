/*
 * Copyright (c) 2003-2019, Great Software Laboratory Pvt. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.gslab.parivahan.api;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.gslab.parivahan.dbmodel.User;
import com.gslab.parivahan.model.UserVO;
import com.gslab.parivahan.util.RideConstants;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Api(value = "user")
@RequestMapping("/api")
public interface UserApi {

    @ApiOperation(value = "Get All Users", nickname = "getAllUsers", notes = "get All Users", response = UserVO.class, responseContainer = "List", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = UserVO.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad Request, All parameters are mandatory."),
        @ApiResponse(code = 404, message = "Not Found."),
        @ApiResponse(code = 500, message = "Intenal Sevrer, Unknown Error.") })
    @RequestMapping(value =  RideConstants.VERSION_1+"/user",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
	ResponseEntity<List<UserVO>> getAllUsers(
			@ApiParam(value = "name", required = false, defaultValue = "") @RequestParam(value = "name", required = false) String name,
			@ApiParam(value = "gsId", required = false, defaultValue = "") @RequestParam(value = "gsId", required = false) String gsId,
			@ApiParam(value = "email", required = false, defaultValue = "") @RequestParam(value = "email", required = false) String email);

    @ApiOperation(value = "Add user", nickname = "addUser", notes = "add User", response = UserVO.class, tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = UserVO.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad Request, All parameters are mandatory."),
        @ApiResponse(code = 404, message = "Not Found."),
        @ApiResponse(code = 500, message = "Intenal Sevrer, Unknown Error.") })
    @RequestMapping(value =  RideConstants.VERSION_1+"/user",
        produces = { "application/json" }, 
        method = RequestMethod.POST,
        consumes = { "application/json" })
    ResponseEntity<UserVO> addUsers(
    		@RequestBody UserVO user);

}
