{ 
   "swagger":"2.0",
   "info":{ 
      "description":"Apis for Parivahan Application API",
      "version":"1.0.0",
      "title":"Parivahan Application API",
      "contact":{ 
         "email":""
      },
      "license":{ 
         "name":"Apache 2.0",
         "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
      }
   },
   "host":"localhost",
   "basePath":"/",
   "tags":[ 
      { 
         "name":"home-controller",
         "description":"Home Controller"
      },
      { 
         "name":"find-ride-api-controller",
         "description":"the findRide API"
      },
      { 
         "name":"rides-api-controller",
         "description":"the rides API"
      },
      { 
         "name":"authentication-controller",
         "description":"Authentication Controller"
      },
      { 
         "name":"user-api-controller",
         "description":"User Api Controller"
      },
      { 
         "name":"feedback-controller",
         "description":"Feedback about parivahan platform"
      },
      { 
         "name":"offer-ride-api-controller",
         "description":"the offerRide API"
      },
      { 
         "name":"user-profile-api-controller",
         "description":"User Profile Api Controller"
      },
      { 
         "name":"places-api-controller",
         "description":"Places Api Controller"
      },
      { 
         "name":"ride-request-api-controller",
         "description":"the RideRequest API"
      },
      { 
         "name":"map-display-controller",
         "description":"Map Display Controller"
      },
      { 
         "name":"basic-error-controller",
         "description":"Basic Error Controller"
      }
   ],
   "paths":{ 
      "/":{ 
         "get":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingGET",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "head":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingHEAD",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "post":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingPOST",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "put":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingPUT",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "delete":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingDELETE",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "options":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingOPTIONS",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "patch":{ 
            "tags":[ 
               "home-controller"
            ],
            "summary":"index",
            "operationId":"indexUsingPATCH",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         }
      },
      "/api/v1/allowed-email-suffix":{ 
         "get":{ 
            "tags":[ 
               "user-profile-api-controller"
            ],
            "summary":"getAllowedEmailSuffix",
            "operationId":"getAllowedEmailSuffixUsingGET",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object"
                  }
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/v1/auth/login":{ 
         "post":{ 
            "tags":[ 
               "authentication-controller"
            ],
            "summary":"Login",
            "description":"Login with the given credentials.",
            "operationId":"springSecurityLoginUsingPOST",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"user",
                  "description":"user",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/ParivahanUserDto"
                  }
               },
               { 
                  "name":"X-Requested-With",
                  "in":"header",
                  "description":"X-Requested-With",
                  "required":true,
                  "type":"string",
                  "default":"XMLHttpRequest"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "$ref":"#/definitions/Authentication"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/v1/auth/logout":{ 
         "post":{ 
            "tags":[ 
               "authentication-controller"
            ],
            "summary":"Logout",
            "description":"Logout the current user.",
            "operationId":"springSecurityLogoutUsingPOST",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK"
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/v1/booking":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"GetAllRideRequest",
            "description":"Get All Ride Request",
            "operationId":"GetAllRideRequest",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         },
         "post":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"addRideRequest",
            "description":"Add Ride Request",
            "operationId":"addRideRequest",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"rideRequest",
                  "description":"rideRequest",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/RideRequestVO"
                  }
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/booking/{bookingCode}":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"GetAllRideRequestByBookingId",
            "description":"Get All Ride Request by Booking Id",
            "operationId":"GetAllRideRequestByBookingId",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"bookingCode",
                  "in":"path",
                  "description":"bookingCode",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/booking/{bookingId}":{ 
         "put":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"UpdateBookingStatus",
            "description":"Update Booking Status",
            "operationId":"UpdateBookingStatus",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"rideStatus",
                  "in":"query",
                  "description":"rideStatus",
                  "required":true,
                  "type":"string"
               },
               { 
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/direction":{ 
         "get":{ 
            "tags":[ 
               "map-display-controller"
            ],
            "summary":"getDIrectionDetails",
            "operationId":"getDIrectionDetailsUsingGET",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"startLocation",
                  "in":"query",
                  "description":"startLocation",
                  "required":true,
                  "type":"string"
               },
               { 
                  "name":"endLocation",
                  "in":"query",
                  "description":"endLocation",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/DirectionPaths"
                     }
                  }
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/v1/feedback":{ 
         "post":{ 
            "tags":[ 
               "feedback"
            ],
            "summary":"FeedBack Api",
            "description":"Api will Post Feedback about parivahan platform",
            "operationId":"FeedBack Api",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"feedbackVO",
                  "description":"feedbackVO",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/FeedbackVo"
                  }
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/FeedbackVo"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/feedback/rating":{ 
         "get":{ 
            "tags":[ 
               "feedback"
            ],
            "summary":"SortedFeedback",
            "description":"Api will Sorted Feedback about parivahan platform",
            "operationId":"SortedFeedback",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/FeedbackVo"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/feedback/rating/{rating}":{ 
         "get":{ 
            "tags":[ 
               "feedback"
            ],
            "summary":"GetFeedBackByRating",
            "description":"Api will Get feedback given by a Ratings about parivahan platform",
            "operationId":"GetFeedBackByRating",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "name":"rating",
                  "in":"query",
                  "description":"rating",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/FeedbackVo"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/feedback/recent":{ 
         "get":{ 
            "tags":[ 
               "feedback"
            ],
            "summary":"RecentFeedBack",
            "description":"Api will Recent Feedback about parivahan platform",
            "operationId":"RecentFeedBack",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/FeedbackVo"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/feedback/user/{email}":{ 
         "get":{ 
            "tags":[ 
               "feedback"
            ],
            "summary":"GetFeedBackByEmailId",
            "description":"Api will Get feedback given by a user about parivahan platform",
            "operationId":"GetFeedBackByEmailId",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"email",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/FeedbackVo"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/map":{ 
         "get":{ 
            "tags":[ 
               "map-display-controller"
            ],
            "summary":"displayMap",
            "operationId":"displayMapUsingGET",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"startLocation",
                  "in":"query",
                  "description":"startLocation",
                  "required":true,
                  "type":"string"
               },
               { 
                  "name":"endLocation",
                  "in":"query",
                  "description":"endLocation",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"string"
                  }
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/v1/offer/{offerCode}":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"GetAllRideRequestByOfferId",
            "description":"Get All Ride Request By offer id",
            "operationId":"GetAllRideRequestByOfferId",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"offerCode",
                  "in":"path",
                  "description":"offerCode",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"email",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/places":{ 
         "get":{ 
            "tags":[ 
               "Place Autocomplete"
            ],
            "summary":"Get All Users",
            "description":"Query for places",
            "operationId":"Places Autocomplete",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"query",
                  "in":"query",
                  "description":"query",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"lat",
                  "in":"query",
                  "description":"lat",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"lng",
                  "in":"query",
                  "description":"lng",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "type":"array",
                        "items":{ 
                           "type":"object"
                        }
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/ride":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"getAllRides",
            "description":"get All rides",
            "operationId":"getAllRides",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         },
         "post":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"offer ride",
            "description":"Host can offer ride using this api with his vehicle details and Start and end Location",
            "operationId":"offerRide",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"email",
                  "required":true,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "in":"body",
                  "name":"rideParams",
                  "description":"Ride Details",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/Ride"
                  }
               },
               { 
                  "name":"showDetailsOnly",
                  "in":"query",
                  "description":"Show ride details only",
                  "required":false,
                  "type":"boolean",
                  "default":false
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK, Ride Added Successfully.",
                  "schema":{ 
                     "$ref":"#/definitions/Ride"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         },
         "delete":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"Delete offered ride",
            "description":"Host can delete the offered ride using this api",
            "operationId":"DeleteRide",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"offerCode",
                  "in":"query",
                  "description":"offerCode",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK, Ride Added Successfully.",
                  "schema":{ 
                     "$ref":"#/definitions/Ride"
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/ride/count":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"CountRides",
            "description":"get ride count",
            "operationId":"CountRides",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/ride/find":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"get joinRides",
            "description":"Api will Return Matching rides as per current location and end location",
            "operationId":"joinRides",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "name":"startLocation",
                  "in":"query",
                  "description":"Start location of Ride",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"endLocation",
                  "in":"query",
                  "description":"End Location of Ride",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"currentGPSLocation",
                  "in":"query",
                  "description":"Current GPS Location of rider",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"currency",
                  "in":"query",
                  "description":"Currnecy of country",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"startCoordinate",
                  "in":"query",
                  "description":"Start co-ordinate",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"endrtCoordinate",
                  "in":"query",
                  "description":"End co-ordinate",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"date",
                  "in":"query",
                  "description":"Date of Start journey",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Hours",
                  "in":"query",
                  "description":"Time to Start journey",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"page",
                  "in":"query",
                  "description":"Page number to search",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "format":"int32"
               },
               { 
                  "name":"seats",
                  "in":"query",
                  "description":"Number of seats to search for ride",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "format":"int32"
               },
               { 
                  "name":"photo",
                  "in":"query",
                  "description":"Does photo of driver is filter parameter",
                  "required":false,
                  "type":"boolean",
                  "default":false
               },
               { 
                  "name":"sort",
                  "in":"query",
                  "description":"Sort rides by Date, nearest date first",
                  "required":false,
                  "type":"boolean",
                  "default":true
               },
               { 
                  "name":"order",
                  "in":"query",
                  "description":"Order rides as per charges, Lowest price first",
                  "required":false,
                  "type":"boolean",
                  "default":true
               },
               { 
                  "name":"radius",
                  "in":"query",
                  "description":"Radius from current location to search rides in Meters",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "format":"int32"
               },
               { 
                  "name":"radiusFromStartLocation",
                  "in":"query",
                  "description":"Radius from Start Location to search rides in Meters",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "format":"int32"
               },
               { 
                  "name":"radiusFromEndLocation",
                  "in":"query",
                  "description":"Radius from End Location to search rides in Meters",
                  "required":false,
                  "type":"integer",
                  "default":5,
                  "format":"int32"
               },
               { 
                  "name":"minPrice",
                  "in":"query",
                  "description":"Minimum price from which search will start",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "format":"int32"
               },
               { 
                  "name":"maxPrice",
                  "in":"query",
                  "description":"Maximum pricee for searching rides",
                  "required":false,
                  "type":"integer",
                  "default":5000,
                  "format":"int32"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"Email id of user",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/ride/recent":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"getRecentRides",
            "description":"get Recent rides",
            "operationId":"getRecentRides",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "name":"pageSize",
                  "in":"query",
                  "description":"pageSize",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               },
               { 
                  "name":"startIndex",
                  "in":"query",
                  "description":"startIndex",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Ride"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/ride/{rideid}":{ 
         "post":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"get Ride Details",
            "description":"Api will Return ride details as per riders current Location",
            "operationId":"getRideDetails",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"rideid",
                  "in":"path",
                  "description":"rideid",
                  "required":true,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"rideParams",
                  "description":"ride details",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/RideParams"
                  }
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "$ref":"#/definitions/RideSearch"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/shuttle/find/{date}":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"get shuttle Details",
            "description":"Api will Return shuttle details",
            "operationId":"getShuttleDetails",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"Content-Type",
                  "in":"header",
                  "description":"Content-Type",
                  "required":true,
                  "type":"string",
                  "default":"application/json"
               },
               { 
                  "name":"date",
                  "in":"path",
                  "description":"date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "$ref":"#/definitions/RideSearch"
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/shuttle/schedule":{ 
         "post":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"addShuttleSchedule",
            "description":"Add Shuttle Schedule",
            "operationId":"addShuttleSchedule",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"shuttleScheduleVO",
                  "description":"shuttleScheduleVO",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/ShuttleScheduleVO"
                  }
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"Schedule Added Successfully.",
                  "schema":{ 
                     "$ref":"#/definitions/ShuttleScheduleVO"
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error"
               }
            }
         }
      },
      "/api/v1/user":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"Get All Users",
            "description":"get All Users",
            "operationId":"getAllUsers",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"name",
                  "in":"query",
                  "description":"name",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"username",
                  "in":"query",
                  "description":"username",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/UserVO"
                     }
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         },
         "post":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"Add user",
            "description":"add User",
            "operationId":"addUser",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "in":"body",
                  "name":"userVO",
                  "description":"userVO",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/UserVO"
                  }
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/UserVO"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Sevrer, Unknown Error."
               }
            }
         }
      },
      "/api/v1/user/booking":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"get shuttle Details",
            "description":"Api will Return shuttle details",
            "operationId":"getShuttleDetails_1",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"type",
                  "in":"query",
                  "description":"type",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"email",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "$ref":"#/definitions/RideSearch"
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Server, Unknown Error."
               }
            }
         }
      },
      "/api/v1/user/offer":{ 
         "get":{ 
            "tags":[ 
               "developers"
            ],
            "summary":"get shuttle Details",
            "description":"Api will Return shuttle details",
            "operationId":"getShuttleDetails_2",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               },
               { 
                  "name":"email",
                  "in":"query",
                  "description":"email",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK.",
                  "schema":{ 
                     "$ref":"#/definitions/RideSearch"
                  }
               },
               "400":{ 
                  "description":"Bad Request, All parameters are mandatory."
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found."
               },
               "500":{ 
                  "description":"Intenal Server, Unknown Error."
               }
            }
         }
      },
      "/error":{ 
         "get":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingGET",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "head":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingHEAD",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "post":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingPOST",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "put":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingPUT",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "201":{ 
                  "description":"Created"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               },
               "404":{ 
                  "description":"Not Found"
               }
            }
         },
         "delete":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingDELETE",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "options":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingOPTIONS",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         },
         "patch":{ 
            "tags":[ 
               "basic-error-controller"
            ],
            "summary":"error",
            "operationId":"errorUsingPATCH",
            "consumes":[ 
               "application/json"
            ],
            "produces":[ 
               "*/*"
            ],
            "parameters":[ 
               { 
                  "name":"Authorization",
                  "in":"header",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"OK",
                  "schema":{ 
                     "type":"object",
                     "additionalProperties":{ 
                        "type":"object"
                     }
                  }
               },
               "204":{ 
                  "description":"No Content"
               },
               "401":{ 
                  "description":"Unauthorized"
               },
               "403":{ 
                  "description":"Forbidden"
               }
            }
         }
      }
   },
   "definitions":{ 
      "Authentication":{ 
         "type":"object",
         "properties":{ 
            "authenticated":{ 
               "type":"boolean"
            },
            "authorities":{ 
               "type":"array",
               "items":{ 
                  "$ref":"#/definitions/GrantedAuthority"
               }
            },
            "credentials":{ 
               "type":"object"
            },
            "details":{ 
               "type":"object"
            },
            "name":{ 
               "type":"string"
            },
            "principal":{ 
               "type":"object"
            }
         }
      },
      "DirectionPaths":{ 
         "type":"object",
         "properties":{ 
            "paths":{ 
               "type":"array",
               "items":{ 
                  "$ref":"#/definitions/LatLng"
               }
            },
            "summary":{ 
               "type":"string"
            }
         }
      },
      "FeedbackVo":{ 
         "type":"object",
         "properties":{ 
            "comment":{ 
               "type":"string"
            },
            "operation":{ 
               "type":"string"
            },
            "rating":{ 
               "type":"integer",
               "format":"int32"
            },
            "userEmail":{ 
               "type":"string"
            }
         }
      },
      "GrantedAuthority":{ 
         "type":"object",
         "properties":{ 
            "authority":{ 
               "type":"string"
            }
         }
      },
      "Host":{ 
         "type":"object",
         "properties":{ 
            "Rating":{ 
               "type":"string",
               "example":"4.3"
            },
            "hostAge":{ 
               "type":"integer",
               "format":"int32",
               "example":26
            },
            "hostGender":{ 
               "type":"string",
               "example":"Male"
            },
            "hostName":{ 
               "type":"string",
               "example":"Swapnil"
            },
            "isGovtIdverified":{ 
               "type":"boolean",
               "example":false
            },
            "isPhoneNumberVerified":{ 
               "type":"boolean",
               "example":true
            },
            "totalHostRatings":{ 
               "type":"integer",
               "format":"int32",
               "example":6
            }
         }
      },
      "LatLng":{ 
         "type":"object",
         "properties":{ 
            "lat":{ 
               "type":"number",
               "format":"double"
            },
            "lng":{ 
               "type":"number",
               "format":"double"
            }
         }
      },
      "ModelAndView":{ 
         "type":"object",
         "properties":{ 
            "empty":{ 
               "type":"boolean"
            },
            "model":{ 
               "type":"object"
            },
            "modelMap":{ 
               "type":"object",
               "additionalProperties":{ 
                  "type":"object"
               }
            },
            "reference":{ 
               "type":"boolean"
            },
            "status":{ 
               "type":"string",
               "enum":[ 
                  "100",
                  "101",
                  "102",
                  "103",
                  "200",
                  "201",
                  "202",
                  "203",
                  "204",
                  "205",
                  "206",
                  "207",
                  "208",
                  "226",
                  "300",
                  "301",
                  "302",
                  "303",
                  "304",
                  "305",
                  "307",
                  "308",
                  "400",
                  "401",
                  "402",
                  "403",
                  "404",
                  "405",
                  "406",
                  "407",
                  "408",
                  "409",
                  "410",
                  "411",
                  "412",
                  "413",
                  "414",
                  "415",
                  "416",
                  "417",
                  "418",
                  "419",
                  "420",
                  "421",
                  "422",
                  "423",
                  "424",
                  "426",
                  "428",
                  "429",
                  "431",
                  "451",
                  "500",
                  "501",
                  "502",
                  "503",
                  "504",
                  "505",
                  "506",
                  "507",
                  "508",
                  "509",
                  "510",
                  "511"
               ]
            },
            "view":{ 
               "$ref":"#/definitions/View"
            },
            "viewName":{ 
               "type":"string"
            }
         }
      },
      "ParivahanUserDto":{ 
         "type":"object",
         "properties":{ 
            "password":{ 
               "type":"string"
            },
            "username":{ 
               "type":"string"
            }
         }
      },
      "Response":{ 
         "type":"object",
         "properties":{ 
            "message":{ 
               "type":"string"
            },
            "statusCode":{ 
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "Ride":{ 
         "type":"object",
         "required":[ 
            "availableSeats",
            "charges",
            "departureDate",
            "departureHours",
            "endCoordinate",
            "startCoordinate"
         ],
         "properties":{ 
            "availableSeats":{ 
               "type":"integer",
               "format":"int32",
               "example":3
            },
            "charges":{ 
               "type":"integer",
               "format":"int32",
               "example":100
            },
            "departureDate":{ 
               "type":"string",
               "example":"2019-02-2T07:46:22:427Z"
            },
            "departureHours":{ 
               "type":"string",
               "example":"0000"
            },
            "encodedPath":{ 
               "type":"string",
               "example":"bgcduh435ry78hjshc984yfhichkidf4yiuwbpxjdskcn"
            },
            "endCoordinate":{ 
               "type":"string",
               "example":"19.2183,72.9781"
            },
            "endLatLng":{ 
               "$ref":"#/definitions/LatLng"
            },
            "endLocation":{ 
               "type":"string",
               "example":"Pune University"
            },
            "host":{ 
               "$ref":"#/definitions/Host"
            },
            "id":{ 
               "type":"string",
               "example":"1200"
            },
            "ridePublishedDate":{ 
               "type":"string",
               "example":"15-08-2018"
            },
            "ridePublishedTime":{ 
               "type":"string",
               "example":"1600"
            },
            "rideRequests":{ 
               "type":"array",
               "items":{ 
                  "$ref":"#/definitions/RideRequestVO"
               }
            },
            "selectedRidePath":{ 
               "type":"string"
            },
            "startCoordinate":{ 
               "type":"string",
               "example":"18.5204,73.8567"
            },
            "startLatLng":{ 
               "$ref":"#/definitions/LatLng"
            },
            "startLocation":{ 
               "type":"string",
               "example":"Gslab pune"
            },
            "stopOvers":{ 
               "type":"array",
               "items":{ 
                  "type":"string"
               }
            },
            "totalRidesOffered":{ 
               "type":"integer",
               "format":"int32",
               "example":18
            },
            "totalSeats":{ 
               "type":"integer",
               "format":"int32",
               "example":4
            },
            "user":{ 
               "$ref":"#/definitions/UserVO"
            },
            "vehicle":{ 
               "type":"string",
               "enum":[ 
                  "car",
                  "bike",
                  "shuttle"
               ]
            }
         }
      },
      "RideParams":{ 
         "type":"object",
         "properties":{ 
            "destinationWalkingDistance":{ 
               "type":"string",
               "example":"1.5km"
            },
            "destinationWalkingDistanceInMeters":{ 
               "type":"integer",
               "format":"int64",
               "example":1500
            },
            "originWalkingDistance":{ 
               "type":"string",
               "example":"1.5km"
            },
            "originWalkingDistanceInMeters":{ 
               "type":"integer",
               "format":"int64",
               "example":1500
            },
            "riderDestinationCoordinate":{ 
               "type":"string",
               "example":"18.554230,73.809636"
            },
            "riderJoiningPointCoordinate":{ 
               "type":"string",
               "example":"18.550069,73.809797"
            },
            "totalChargesForRide":{ 
               "type":"integer",
               "format":"int32",
               "example":50
            },
            "totalRideDistance":{ 
               "type":"string",
               "example":"5000"
            },
            "totalTravelDurationInSeconds":{ 
               "type":"string",
               "example":"2000"
            }
         }
      },
      "RideRequest":{ 
         "type":"object",
         "properties":{ 
            "bookingCode":{ 
               "type":"integer",
               "format":"int32"
            },
            "bookingId":{ 
               "type":"string"
            },
            "createdDate":{ 
               "type":"string",
               "format":"date-time"
            },
            "endLocation":{ 
               "type":"string"
            },
            "id":{ 
               "type":"integer",
               "format":"int32"
            },
            "isDeleted":{ 
               "type":"boolean"
            },
            "rideCharges":{ 
               "type":"integer",
               "format":"int32"
            },
            "startLocation":{ 
               "type":"string"
            },
            "status":{ 
               "type":"string",
               "enum":[ 
                  "ACCEPTED",
                  "DECLINED",
                  "PENDING",
                  "CANCELLED"
               ]
            },
            "updatedDate":{ 
               "type":"string",
               "format":"date-time"
            },
            "user":{ 
               "$ref":"#/definitions/User"
            }
         }
      },
      "RideRequestVO":{ 
         "type":"object",
         "properties":{ 
            "bookingId":{ 
               "type":"string"
            },
            "endLocation":{ 
               "type":"string"
            },
            "ride":{ 
               "$ref":"#/definitions/Ride"
            },
            "rideCharges":{ 
               "type":"integer",
               "format":"int32"
            },
            "rideId":{ 
               "type":"string"
            },
            "startLocation":{ 
               "type":"string"
            },
            "status":{ 
               "type":"string",
               "enum":[ 
                  "ACCEPTED",
                  "DECLINED",
                  "PENDING",
                  "CANCELLED"
               ]
            },
            "user":{ 
               "$ref":"#/definitions/UserVO"
            },
            "userEmail":{ 
               "type":"string"
            }
         }
      },
      "RideSearch":{ 
         "type":"object",
         "properties":{ 
            "destinationWalkingDistance":{ 
               "type":"string",
               "example":"1.5km"
            },
            "destinationWalkingDistanceInMeters":{ 
               "type":"integer",
               "format":"int64",
               "example":1500
            },
            "originWalkingDistance":{ 
               "type":"string",
               "example":"1.5km"
            },
            "originWalkingDistanceInMeters":{ 
               "type":"integer",
               "format":"int64",
               "example":1500
            },
            "ride":{ 
               "$ref":"#/definitions/Ride"
            },
            "riderEndPointCoordinate":{ 
               "$ref":"#/definitions/LatLng"
            },
            "riderJoiningPointCoordinate":{ 
               "example":"18.550069,73.809797",
               "$ref":"#/definitions/LatLng"
            },
            "riderOriginCoordinate":{ 
               "type":"string",
               "example":"18.554230,73.809636"
            },
            "totalChargesForRide":{ 
               "type":"integer",
               "format":"int32",
               "example":50
            },
            "totalRideDistance":{ 
               "type":"string",
               "example":"5000"
            },
            "totalTravelDurationInSeconds":{ 
               "type":"string",
               "example":"2000"
            },
            "walkingDurationInSeconds":{ 
               "type":"string",
               "example":"720"
            },
            "walkingEncodedPath":{ 
               "type":"string",
               "example":"fywefg469ncjd@3mld@xekjd2w3$5%vfsd"
            }
         }
      },
      "ShuttleScheduleVO":{ 
         "type":"object",
         "properties":{ 
            "endLocation":{ 
               "type":"string"
            },
            "schedules":{ 
               "type":"array",
               "items":{ 
                  "type":"string"
               }
            },
            "startLocation":{ 
               "type":"string"
            },
            "totalSeats":{ 
               "type":"integer",
               "format":"int32"
            },
            "user":{ 
               "$ref":"#/definitions/UserVO"
            }
         }
      },
      "User":{ 
         "type":"object",
         "properties":{ 
            "createdDate":{ 
               "type":"string",
               "format":"date-time"
            },
            "email":{ 
               "type":"string"
            },
            "firstName":{ 
               "type":"string"
            },
            "gender":{ 
               "type":"string"
            },
            "id":{ 
               "type":"integer",
               "format":"int32"
            },
            "lastName":{ 
               "type":"string"
            },
            "mobileNumber":{ 
               "type":"string"
            },
            "name":{ 
               "type":"string"
            },
            "updatedDate":{ 
               "type":"string",
               "format":"date-time"
            },
            "username":{ 
               "type":"string"
            }
         }
      },
      "UserVO":{ 
         "type":"object",
         "properties":{ 
            "email":{ 
               "type":"string"
            },
            "firstName":{ 
               "type":"string"
            },
            "gender":{ 
               "type":"string"
            },
            "lastName":{ 
               "type":"string"
            },
            "mobileNumber":{ 
               "type":"string"
            },
            "name":{ 
               "type":"string"
            },
            "username":{ 
               "type":"string"
            }
         }
      },
      "View":{ 
         "type":"object",
         "properties":{ 
            "contentType":{ 
               "type":"string"
            }
         }
      }
   }
}