/*
 * Copyright (c) 2003-2019, Great Software Laboratory Pvt. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.gslab.parivahan.security;

import java.security.Key;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

import io.jsonwebtoken.impl.crypto.MacProvider;

/*
 * 
 * @author Swapnil Kashid
 * 
 * */

@Configuration
@ConfigurationProperties(prefix = "parivahan.security.jwt")
public class ParivahanJwtSettings {
	/**
	 * {@link ICesJwtToken} will expire after this time.
	 */
	private String tokenExpirationTime;
	/**
	 * anonymous token will expire after this time.
	 */
	private String anonymousTokenExpirationTime;

	/**
	 * Token issuer.
	 */
	private String tokenIssuer;

	/**
	 * Key is used to sign {@link ICesJwtToken}.
	 */
	private String tokenSigningKey;

	private Key autoGeneratedTokenSigningKey = MacProvider.generateKey();

	/**
	 * {@link ICesJwtToken} can be refreshed during this timeframe.
	 */
	private String refreshTokenExpTime;

	/**
	 * @return the autoGeneratedTokenSigningKey
	 */
	public Key getAutoGeneratedTokenSigningKey() {
		return autoGeneratedTokenSigningKey;
	}

	public Integer getRefreshTokenExpTime() {
		return Integer.parseInt(refreshTokenExpTime);
	}

	public void setRefreshTokenExpTime(Integer refreshTokenExpTime) {
		this.refreshTokenExpTime = refreshTokenExpTime.toString();
	}

	public Integer getTokenExpirationTime() {
		return Integer.parseInt(tokenExpirationTime);
	}

	public void setTokenExpirationTime(Integer tokenExpirationTime) {
		this.tokenExpirationTime = tokenExpirationTime.toString();
	}

	
	public Integer getAnonymousTokenExpirationTime() {
		return Integer.parseInt(anonymousTokenExpirationTime);
	}

	public void setAnonymousTokenExpirationTime(Integer anonymousTokenExpirationTime) {
		this.anonymousTokenExpirationTime = anonymousTokenExpirationTime.toString();
	}

	public String getTokenIssuer() {
		return tokenIssuer;
	}

	public void setTokenIssuer(String tokenIssuer) {
		this.tokenIssuer = tokenIssuer;
	}

	public String getTokenSigningKey() {
		return tokenSigningKey;
	}

	public void setTokenSigningKey(String tokenSigningKey) {
		this.tokenSigningKey = tokenSigningKey;
	}
}
